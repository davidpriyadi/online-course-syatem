{"timestamp":"2024-07-28T11:18:03.266191+07:00","version":"1","msg":"Starting OrderPaymentServiceApplication using Java 17.0.9 with PID 33708 (/Users/davidpriyadi/ai/hibank/online-course-syatem/order-payment-service/target/classes started by davidpriyadi in /Users/davidpriyadi/ai/hibank/online-course-syatem)","logger":"com.mini.project.order.payment.service.OrderPaymentServiceApplication","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:03.274725+07:00","version":"1","msg":"No active profile set, falling back to 1 default profile: \"default\"","logger":"com.mini.project.order.payment.service.OrderPaymentServiceApplication","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:04.328835+07:00","version":"1","msg":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:04.461512+07:00","version":"1","msg":"Finished Spring Data repository scanning in 127 ms. Found 2 JPA repository interfaces.","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:04.581176+07:00","version":"1","msg":"BeanFactory id=515fa4a8-d326-33cd-98bb-453b0f01a071","logger":"org.springframework.cloud.context.scope.GenericScope","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:04.720767+07:00","version":"1","msg":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread":"main","level":"WARN","level_value":30000}
{"timestamp":"2024-07-28T11:18:04.722881+07:00","version":"1","msg":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread":"main","level":"WARN","level_value":30000}
{"timestamp":"2024-07-28T11:18:04.866668+07:00","version":"1","msg":"Tomcat initialized with port 8885 (http)","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:04.873588+07:00","version":"1","msg":"Starting service [Tomcat]","logger":"org.apache.catalina.core.StandardService","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:04.873906+07:00","version":"1","msg":"Starting Servlet engine: [Apache Tomcat/10.1.26]","logger":"org.apache.catalina.core.StandardEngine","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:04.908798+07:00","version":"1","msg":"Initializing Spring embedded WebApplicationContext","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:04.909173+07:00","version":"1","msg":"Root WebApplicationContext: initialization completed in 1590 ms","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.27439+07:00","version":"1","msg":"HikariPool-1 - Starting...","logger":"com.zaxxer.hikari.HikariDataSource","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.392797+07:00","version":"1","msg":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e4af370","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.393573+07:00","version":"1","msg":"HikariPool-1 - Start completed.","logger":"com.zaxxer.hikari.HikariDataSource","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.40934+07:00","version":"1","msg":"Database: jdbc:postgresql://localhost:5435/payment-db (PostgreSQL 16.2)","logger":"org.flywaydb.core.FlywayExecutor","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.455646+07:00","version":"1","msg":"Successfully validated 1 migration (execution time 00:00.024s)","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.496511+07:00","version":"1","msg":"Current version of schema \"public\": 1","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.498446+07:00","version":"1","msg":"Schema \"public\" is up to date. No migration necessary.","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.552939+07:00","version":"1","msg":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.591475+07:00","version":"1","msg":"HHH000412: Hibernate ORM core version 6.5.2.Final","logger":"org.hibernate.Version","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.613433+07:00","version":"1","msg":"HHH000026: Second-level cache disabled","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.759487+07:00","version":"1","msg":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:05.787098+07:00","version":"1","msg":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger":"org.hibernate.orm.deprecation","thread":"main","level":"WARN","level_value":30000}
{"timestamp":"2024-07-28T11:18:06.225584+07:00","version":"1","msg":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.226837+07:00","version":"1","msg":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.455658+07:00","version":"1","msg":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"main","level":"WARN","level_value":30000}
{"timestamp":"2024-07-28T11:18:06.830135+07:00","version":"1","msg":"Eureka HTTP Client uses RestTemplate.","logger":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.858241+07:00","version":"1","msg":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread":"main","level":"WARN","level_value":30000}
{"timestamp":"2024-07-28T11:18:06.863215+07:00","version":"1","msg":"Exposing 1 endpoint beneath base path '/actuator'","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.908248+07:00","version":"1","msg":"Setting initial instance status as: STARTING","logger":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.920085+07:00","version":"1","msg":"Initializing Eureka in region us-east-1","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.922064+07:00","version":"1","msg":"Resolving eureka endpoints via configuration","logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.925888+07:00","version":"1","msg":"Disable delta property : false","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.92605+07:00","version":"1","msg":"Single vip registry refresh property : null","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.926155+07:00","version":"1","msg":"Force full registry fetch : false","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.926233+07:00","version":"1","msg":"Application is null : false","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.926316+07:00","version":"1","msg":"Registered Applications size is zero : true","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.9264+07:00","version":"1","msg":"Application version is -1: true","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.926473+07:00","version":"1","msg":"Getting all instance registry info from the eureka server","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:06.942811+07:00","version":"1","msg":"HTTP GET http://localhost:8761/eureka/apps/","logger":"org.springframework.web.client.RestTemplate","thread":"main","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:06.976928+07:00","version":"1","msg":"Accept=[application/json, application/*+json]","logger":"org.springframework.web.client.RestTemplate","thread":"main","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:07.004062+07:00","version":"1","msg":"Response 200 OK","logger":"org.springframework.web.client.RestTemplate","thread":"main","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:07.00559+07:00","version":"1","msg":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger":"org.springframework.web.client.RestTemplate","thread":"main","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:07.01548+07:00","version":"1","msg":"The response status is 200","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.016363+07:00","version":"1","msg":"Starting heartbeat executor: renew interval is: 30","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.01715+07:00","version":"1","msg":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger":"com.netflix.discovery.InstanceInfoReplicator","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.017819+07:00","version":"1","msg":"Discovery Client initialized at timestamp 1722140287017 with initial instances count: 2","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.021185+07:00","version":"1","msg":"Registering application ORDER-PAYMENT-SERVICE with eureka with status UP","logger":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.02149+07:00","version":"1","msg":"Saw local status change event StatusChangeEvent [timestamp=1722140287021, current=UP, previous=STARTING]","logger":"com.netflix.discovery.DiscoveryClient","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.02212+07:00","version":"1","msg":"DiscoveryClient_ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885: registering service...","logger":"com.netflix.discovery.DiscoveryClient","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.023753+07:00","version":"1","msg":"HTTP POST http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:07.024891+07:00","version":"1","msg":"Accept=[application/json, application/*+json]","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:07.027238+07:00","version":"1","msg":"Writing [InstanceInfo [instanceId = 192.168.1.105:order-payment-service:8885, appName = ORDER-PAYMENT-SERVICE, hostName = 192.168.1.105, status = UP, ipAddr = 192.168.1.105, port = 8885, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@511f21f9] as \"application/json\"","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:07.029666+07:00","version":"1","msg":"Tomcat started on port 8885 (http) with context path '/'","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.030164+07:00","version":"1","msg":"Updating port to 8885","logger":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.037673+07:00","version":"1","msg":"Response 204 NO_CONTENT","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:07.038148+07:00","version":"1","msg":"DiscoveryClient_ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885 - registration status: 204","logger":"com.netflix.discovery.DiscoveryClient","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.043388+07:00","version":"1","msg":"Started OrderPaymentServiceApplication in 4.226 seconds (process running for 5.538)","logger":"com.mini.project.order.payment.service.OrderPaymentServiceApplication","thread":"main","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.279787+07:00","version":"1","msg":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"RMI TCP Connection(4)-127.0.0.1","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.280136+07:00","version":"1","msg":"Initializing Servlet 'dispatcherServlet'","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"RMI TCP Connection(4)-127.0.0.1","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:07.281517+07:00","version":"1","msg":"Completed initialization in 1 ms","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"RMI TCP Connection(4)-127.0.0.1","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:18:37.0319+07:00","version":"1","msg":"HTTP GET http://localhost:8761/eureka/apps/delta","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:37.03361+07:00","version":"1","msg":"HTTP PUT http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885?status=UP&lastDirtyTimestamp=1722140287021","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:37.037916+07:00","version":"1","msg":"Accept=[application/json, application/*+json]","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:37.045567+07:00","version":"1","msg":"Accept=[application/json, application/*+json]","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:37.052903+07:00","version":"1","msg":"Response 200 OK","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:37.0542+07:00","version":"1","msg":"Response 200 OK","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:18:37.054086+07:00","version":"1","msg":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:07.069013+07:00","version":"1","msg":"HTTP GET http://localhost:8761/eureka/apps/delta","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:07.068585+07:00","version":"1","msg":"HTTP PUT http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885?status=UP&lastDirtyTimestamp=1722140287021","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:07.076802+07:00","version":"1","msg":"Accept=[application/json, application/*+json]","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:07.078646+07:00","version":"1","msg":"Accept=[application/json, application/*+json]","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:07.094444+07:00","version":"1","msg":"Response 200 OK","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:07.09433+07:00","version":"1","msg":"Response 200 OK","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-HeartbeatExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:07.095258+07:00","version":"1","msg":"Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-CacheRefreshExecutor-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:11.897427+07:00","version":"1","msg":"Unregistering application ORDER-PAYMENT-SERVICE with eureka with status DOWN","logger":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:11.900978+07:00","version":"1","msg":"Saw local status change event StatusChangeEvent [timestamp=1722140351900, current=DOWN, previous=UP]","logger":"com.netflix.discovery.DiscoveryClient","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:11.902663+07:00","version":"1","msg":"DiscoveryClient_ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885: registering service...","logger":"com.netflix.discovery.DiscoveryClient","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:11.905882+07:00","version":"1","msg":"HTTP POST http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:11.910551+07:00","version":"1","msg":"Accept=[application/json, application/*+json]","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:11.911911+07:00","version":"1","msg":"Writing [InstanceInfo [instanceId = 192.168.1.105:order-payment-service:8885, appName = ORDER-PAYMENT-SERVICE, hostName = 192.168.1.105, status = DOWN, ipAddr = 192.168.1.105, port = 8885, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@511f21f9] as \"application/json\"","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:11.998363+07:00","version":"1","msg":"Response 204 NO_CONTENT","logger":"org.springframework.web.client.RestTemplate","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:12.002383+07:00","version":"1","msg":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:12.006445+07:00","version":"1","msg":"DiscoveryClient_ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885 - registration status: 204","logger":"com.netflix.discovery.DiscoveryClient","thread":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:12.036337+07:00","version":"1","msg":"HikariPool-1 - Shutdown initiated...","logger":"com.zaxxer.hikari.HikariDataSource","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:12.047131+07:00","version":"1","msg":"HikariPool-1 - Shutdown completed.","logger":"com.zaxxer.hikari.HikariDataSource","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:12.048057+07:00","version":"1","msg":"Shutting down DiscoveryClient ...","logger":"com.netflix.discovery.DiscoveryClient","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:15.055575+07:00","version":"1","msg":"Unregistering ...","logger":"com.netflix.discovery.DiscoveryClient","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:15.076618+07:00","version":"1","msg":"HTTP DELETE http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885","logger":"org.springframework.web.client.RestTemplate","thread":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:15.112414+07:00","version":"1","msg":"Accept=[application/json, application/*+json]","logger":"org.springframework.web.client.RestTemplate","thread":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:15.133624+07:00","version":"1","msg":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:554)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\n\t... 39 more\n","logger":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:15.134825+07:00","version":"1","msg":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"timestamp":"2024-07-28T11:19:15.143378+07:00","version":"1","msg":"HTTP DELETE http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885","logger":"org.springframework.web.client.RestTemplate","thread":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:15.143871+07:00","version":"1","msg":"Accept=[application/json, application/*+json]","logger":"org.springframework.web.client.RestTemplate","thread":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"timestamp":"2024-07-28T11:19:15.144913+07:00","version":"1","msg":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:554)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)\n\t... 40 more\n","logger":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"timestamp":"2024-07-28T11:19:15.145427+07:00","version":"1","msg":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused","logger":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread":"SpringApplicationShutdownHook","level":"WARN","level_value":30000}
{"timestamp":"2024-07-28T11:19:15.145595+07:00","version":"1","msg":"DiscoveryClient_ORDER-PAYMENT-SERVICE/192.168.1.105:order-payment-service:8885 - de-registration failedCannot execute request on any known server","logger":"com.netflix.discovery.DiscoveryClient","thread":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n"}
{"timestamp":"2024-07-28T11:19:15.148048+07:00","version":"1","msg":"Completed shut down of DiscoveryClient","logger":"com.netflix.discovery.DiscoveryClient","thread":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
